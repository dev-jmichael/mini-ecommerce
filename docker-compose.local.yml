services:
  auth:
    build:
      context: .
      dockerfile: ./src/apps/auth/Dockerfile
      target: development
    command: sh -c "cd src/apps/auth && npm run start:dev"
    container_name: auth-service
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=auth-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - auth-db

  product-catalog:
    build:
      context: .
      dockerfile: ./src/apps/product-catalog/Dockerfile
      target: development
    command: sh -c "cd src/apps/product-catalog && npm run start:dev"
    container_name: product-catalog-service
    environment:
      - NODE_ENV=development
    ports:
      - "3002:3002"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  order:
    build:
      context: .
      dockerfile: ./src/apps/order/Dockerfile
      target: development
    command: sh -c "cd src/apps/order && npm run start:dev"
    container_name: order-service
    environment:
      - NODE_ENV=development
    ports:
      - "3003:3003"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  inventory:
    build:
      context: .
      dockerfile: ./src/apps/inventory/Dockerfile
      target: development
    command: sh -c "cd src/apps/inventory && npm run start:dev"
    container_name: inventory-service
    environment:
      - NODE_ENV=development
    ports:
      - "3004:3004"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  payment:
    build:
      context: .
      dockerfile: ./src/apps/payment/Dockerfile
      target: development
    command: sh -c "cd src/apps/payment && npm run start:dev"
    container_name: payment-service
    environment:
      - NODE_ENV=development
    ports:
      - "3005:3005"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth-db:
    image: postgres:17.0-alpine3.20
    container_name: auth-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: local@host.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80" # Access pgAdmin via localhost:8080
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - auth-db

volumes:
  auth_db_data:
  pgadmin_data:
